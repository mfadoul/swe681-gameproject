<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">
        <!-- Options for Access
      	access="permitAll"
		access="hasRole('admin')"
		access="isAuthenticated()"
        -->

		<!-- users -->
		<intercept-url pattern="/GameProject/user/**"
			access="isAuthenticated()" />

		<!-- games -->
		<intercept-url pattern="/GameProject/game/**"
			access="hasRole('player')" />

		<intercept-url pattern="/GameProject/**" access="permitAll" />
		<intercept-url pattern="/**" access="permitAll" />
		<form-login login-page="/login.jsp"/>
		<logout />
		<remember-me />
		<!-- limit the number of sessions a user can have -->
		<session-management session-authentication-strategy-ref="sas">
		</session-management>
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="gameProjectJndiUserService">
            <!-- For hashing and salting user passwords -->
			<password-encoder hash="bcrypt"/>
		</authentication-provider>
	</authentication-manager>

    <beans:bean id="userAuthenticationErrorHandler" 
         class="edu.gmu.swe.gameproj.springlistener.UserAuthenticationErrorHandler">
    </beans:bean>

	<beans:bean id="gameProjectJndiUserService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="gameProjectJndiDs" />
		<beans:property name="usersByUsernameQuery"
			value="select u.email as username, u.password, 1 as enabled from users u where accountLocked=0 and email=?" />
		<beans:property name="authoritiesByUsernameQuery"
			value="select distinct u.email as username, u.role as authority from users u where email=?" />
	</beans:bean>
	<beans:bean id="gameProjectJndiDs"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:/GameWebsiteDS" />
	</beans:bean>
	
	<!-- More Session management stuff -->
	<beans:bean id="concurrencyFilter"
      class="org.springframework.security.web.session.ConcurrentSessionFilter">
      <beans:property name="sessionRegistry" ref="sessionRegistry" />
      <beans:property name="expiredUrl" value="/session-expired.jsp" />
    </beans:bean>

<!-- 
    <beans:bean id="myAuthFilter" class=
        "org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <beans:property name="sessionAuthenticationStrategy" ref="sas" />
        <beans:property name="authenticationManager" ref="gameProjectJndiUserService" />
    </beans:bean>
 -->
    <beans:bean id="sas" class=
        "org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <beans:property name="maximumSessions" value="1" />
    </beans:bean>

    <beans:bean id="sessionRegistry"
        class="org.springframework.security.core.session.SessionRegistryImpl" />
	
</beans:beans>